{"version":3,"sources":["webpack/bootstrap daba8c6a8f71335da896","./frontend/twitter.js","./frontend/follow_toggle.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;AAGA;AACA;AACA;AACA;AACA,KAAI;AACJ,EAAC,E;;;;;;ACRD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA,mBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA,+BAA8B,8B","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap daba8c6a8f71335da896","const FollowToggle = require('./follow_toggle');\n\n\n// Document ready callback \n$(()=> {\n $('.follow-toggle').each((i, el) => {\n\t    new FollowToggle($(el));\n\t  });\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/twitter.js\n// module id = 0\n// module chunks = 0","class FollowToggle {\n\tconstructor($el, options){\n\t\tthis.el = $el;\n\t\tthis.userId= $el.data('user-id') || options.userId;\n\t\tthis.followState = $el.data('initial-follow-state') || options.followState;\n\t\tthis.render();\n\n\t\tthis.el.click(this.handleClick.bind(this));\n\t}\n\n\trender(){\n\t\tlet text = this.followState === 'followed' ? 'Unfollow!' : 'Follow!';\n\n\t\tthis.el.text(text);\n\t}\n\n\thandleClick(event){\n\t\tevent.preventDefault(); \n\n\t\tswitch (this.followState){\n\t\t\tcase 'followed':\n\t\t\t\tthis.unfollow();\n\t\t\t\tbreak;\n\t\t\tcase 'unfollowed':\n\t\t\t\tthis.follow();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfollow(){\n\t\tthis.makeRequest('POST', 'followed');\n\t}\n\tunfollow(){\n\t\tthis.makeRequest('DELETE', 'unfollowed');\n\t}\n\n\n\tmakeRequest(type, followState){\n\t\tlet that = this;\n\n\t\t$.ajax({\n\t\t\turl: `/users/${that.userId}/follow`,\n\t\t\ttype: type,\n\t\t\tdataType: 'json', \n\t\t\tsuccess(){\n\t\t\t\tthat.followState = followState;\n\t\t\t\tthat.render();\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nmodule.exports = FollowToggle; // this makes it require-able\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./frontend/follow_toggle.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}